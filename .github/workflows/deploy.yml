name: Deploy to EKS with Terraform and Helmfile

on:
  push:
    branches:
      - dev
      - stage

env:
  TF_VERSION: 1.8.0
  AWS_REGION: us-east-1
  HELM_VERSION: v3.14.0
  HELMFILE_VERSION: v0.155.0
  SOPS_VERSION: 3.8.1
  AGE_KEY_FILE: .sops.age.key
  CLUSTER_NAME: hello-eks

jobs:
  deploy:
    name: Terraform & Helmfile Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set ENVIRONMENT from branch
        run: echo "ENVIRONMENT=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: terraform/eks
        run: terraform init

     

      - name: Terraform Plan
        id: tfplan
        working-directory: terraform/eks
        continue-on-error: true
        run: |
          terraform plan -out=tfplan || echo "No changes to apply"

     


         
      - name: Terraform Apply Plan
        working-directory: terraform/eks
        run: |
          if [ -f tfplan ]; then
            terraform apply -auto-approve tfplan
          else
            echo "Skipping apply. No tfplan file found (no changes)."
          fi

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Install Helm Diff plugin
        run: helm plugin install https://github.com/databus23/helm-diff

      - name: Install Helmfile
        run: |
          VERSION_CLEAN=${HELMFILE_VERSION#v}
          curl -L "https://github.com/helmfile/helmfile/releases/download/${HELMFILE_VERSION}/helmfile_${VERSION_CLEAN}_linux_amd64.tar.gz" -o helmfile.tar.gz
          tar -xzf helmfile.tar.gz
          sudo mv helmfile /usr/local/bin/


      - name: Install SOPS
        run: |
          curl -L https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64 -o sops
          chmod +x sops
          sudo mv sops /usr/local/bin/sops

      - name: Create SOPS key
        run: |
          echo "${{ secrets.SOPS_AGE_KEY }}" > $AGE_KEY_FILE
          export SOPS_AGE_KEY_FILE=$AGE_KEY_FILE

      - name: Decrypt secrets
        run: |
          export SOPS_AGE_KEY_FILE=$AGE_KEY_FILE
          sops -d secrets/${{ env.ENVIRONMENT }}-secrets.yaml > secrets.dec.yaml


      - name: Configure kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME


      - name: Deploy with Helmfile
        run: |
          export SOPS_AGE_KEY_FILE=$AGE_KEY_FILE
          helmfile -e $ENVIRONMENT apply
