name: Deploy to EKS with Terraform and Helmfile

on:
  push:
    branches:
      - dev
      - stage

env:
  TF_VERSION: 1.8.0
  AWS_REGION: us-east-1
  HELM_VERSION: v3.14.0
  HELMFILE_VERSION: v0.155.0
  SOPS_VERSION: 3.8.1
  AGE_KEY_FILE: .sops.age.key

jobs:
  deploy:
    name: Terraform & Helmfile Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set ENVIRONMENT from branch
        run: echo "ENVIRONMENT=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: terraform/eks
        run: terraform init

      - name: Check EKS cluster and OIDC readiness
        working-directory: terraform/eks
        run: |
          CLUSTER_NAME="hello-eks"
          echo "Verificando que el cluster $CLUSTER_NAME exista..."
          if ! aws eks describe-cluster --name $CLUSTER_NAME > /dev/null 2>&1; then
            echo "El cluster aún no existe. Terraform lo creará."
          else
            echo "Cluster $CLUSTER_NAME ya existe."
          fi

      - name: Check & Import OIDC provider if not managed
        working-directory: terraform/eks
        run: |
          OIDC_ARN="arn:aws:iam::585768155983:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/309AFEFA1887AB6323F01F647F796115"
          RESOURCE_ADDR='module.eks.aws_iam_openid_connect_provider.oidc_provider[0]'
          echo "Verificando si el recurso OIDC ya está importado..."
          if terraform state list | grep "$RESOURCE_ADDR" > /dev/null 2>&1; then
            echo "El recurso OIDC ya está en el estado de Terraform."
          else
            echo "Importando recurso OIDC..."
            terraform import "$RESOURCE_ADDR" "$OIDC_ARN"
          fi

      - name: Terraform Apply
        working-directory: terraform/eks
        run: terraform apply -auto-approve

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Install Helmfile
        run: |
          VERSION_CLEAN=${HELMFILE_VERSION#v} 
          curl -L "https://github.com/helmfile/helmfile/releases/download/${HELMFILE_VERSION}/helmfile_${VERSION_CLEAN}_linux_amd64.tar.gz" -o helmfile.tar.gz
          tar -xzf helmfile.tar.gz
          sudo mv helmfile /usr/local/bin/

      - name: Install SOPS
        run: |
          curl -L https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64 -o sops
          chmod +x sops
          sudo mv sops /usr/local/bin/sops

      - name: Create SOPS key
        run: |
          echo "${{ secrets.SOPS_AGE_KEY }}" > $AGE_KEY_FILE
          export SOPS_AGE_KEY_FILE=$AGE_KEY_FILE

      - name: Decrypt secrets
        run: |
          export SOPS_AGE_KEY_FILE=$AGE_KEY_FILE
          sops -d secrets/${{ env.ENVIRONMENT }}-secrets.yaml > secrets.dec.yaml

      - name: Deploy with Helmfile
        run: |
          export SOPS_AGE_KEY_FILE=$AGE_KEY_FILE
          helmfile -e $ENVIRONMENT apply
